"""Add user, role tables

Revision ID: 6351f0a5439c
Revises: 2e8262105b5e
Create Date: 2024-09-05 14:15:02.198686

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "6351f0a5439c"
down_revision = "2e8262105b5e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "name",
            sa.String(length=50),
            nullable=False,
            comment="The name of the role, e.g., 'admin', 'user'.",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "email",
            sa.String(length=120),
            nullable=False,
            comment="The user's email, used for login and communication.",
        ),
        sa.Column(
            "password",
            sa.String(length=128),
            nullable=False,
            comment="The hashed password of the user.",
        ),
        sa.Column(
            "role_id",
            sa.Integer(),
            nullable=False,
            comment="Foreign key that connects the user to a role.",
        ),
        sa.Column(
            "email_verified",
            sa.Boolean(),
            nullable=True,
            comment="Indicates whether the user's email has been verified.",
        ),
        sa.Column(
            "reset_token",
            sa.String(length=128),
            nullable=True,
            comment="Token used for password recovery.",
        ),
        sa.Column(
            "reset_token_expiry",
            sa.DateTime(),
            nullable=True,
            comment="Expiration date of the password recovery token.",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            nullable=True,
            comment="The timestamp when the user account was created.",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            nullable=True,
            comment="The timestamp when the user account was last updated.",
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    with op.batch_alter_table("brands", schema=None) as batch_op:
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=100),
            comment="The name of the brand, e.g., Nike, Adidas, etc.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "description",
            existing_type=mysql.VARCHAR(length=255),
            comment="A brief description of the brand.",
            existing_nullable=True,
        )

    with op.batch_alter_table("categories", schema=None) as batch_op:
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=100),
            comment="The name of the product category, e.g., shoes, shirts, etc.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "description",
            existing_type=mysql.VARCHAR(length=255),
            comment="A brief description of the category.",
            existing_nullable=True,
        )

    with op.batch_alter_table("countries", schema=None) as batch_op:
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=100),
            comment="The country of origin for the product, e.g., USA, China.",
            existing_nullable=False,
        )

    with op.batch_alter_table("genders", schema=None) as batch_op:
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=50),
            comment="The target gender for the product, e.g., male, female, unisex.",
            existing_nullable=False,
        )

    with op.batch_alter_table("products", schema=None) as batch_op:
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=255),
            comment="The name of the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "description",
            existing_type=mysql.TEXT(),
            comment="A detailed description of the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "price",
            existing_type=mysql.FLOAT(),
            comment="The regular price of the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "discount_price",
            existing_type=mysql.FLOAT(),
            comment="The discounted price, if applicable.",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "image_url",
            existing_type=mysql.VARCHAR(length=255),
            comment="URL to the product's image.",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "brand_id",
            existing_type=mysql.INTEGER(),
            comment="Foreign key linking to the brand associated with the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "category_id",
            existing_type=mysql.INTEGER(),
            comment="Foreign key linking to the product's category.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "sport_id",
            existing_type=mysql.INTEGER(),
            comment="Foreign key linking to the sport associated with the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "gender_id",
            existing_type=mysql.INTEGER(),
            comment="Foreign key linking to the target gender for the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "country_id",
            existing_type=mysql.INTEGER(),
            comment="Foreign key linking to the country of origin for the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "composition",
            existing_type=mysql.VARCHAR(length=255),
            comment="The composition or material of the product.",
            existing_nullable=True,
        )

    with op.batch_alter_table("sports", schema=None) as batch_op:
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=100),
            comment="The name of the sport associated with the product, e.g., football, basketball.",
            existing_nullable=False,
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("sports", schema=None) as batch_op:
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=100),
            comment=None,
            existing_comment="The name of the sport associated with the product, e.g., football, basketball.",
            existing_nullable=False,
        )

    with op.batch_alter_table("products", schema=None) as batch_op:
        batch_op.alter_column(
            "composition",
            existing_type=mysql.VARCHAR(length=255),
            comment=None,
            existing_comment="The composition or material of the product.",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "country_id",
            existing_type=mysql.INTEGER(),
            comment=None,
            existing_comment="Foreign key linking to the country of origin for the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "gender_id",
            existing_type=mysql.INTEGER(),
            comment=None,
            existing_comment="Foreign key linking to the target gender for the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "sport_id",
            existing_type=mysql.INTEGER(),
            comment=None,
            existing_comment="Foreign key linking to the sport associated with the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "category_id",
            existing_type=mysql.INTEGER(),
            comment=None,
            existing_comment="Foreign key linking to the product's category.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "brand_id",
            existing_type=mysql.INTEGER(),
            comment=None,
            existing_comment="Foreign key linking to the brand associated with the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "image_url",
            existing_type=mysql.VARCHAR(length=255),
            comment=None,
            existing_comment="URL to the product's image.",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "discount_price",
            existing_type=mysql.FLOAT(),
            comment=None,
            existing_comment="The discounted price, if applicable.",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "price",
            existing_type=mysql.FLOAT(),
            comment=None,
            existing_comment="The regular price of the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "description",
            existing_type=mysql.TEXT(),
            comment=None,
            existing_comment="A detailed description of the product.",
            existing_nullable=False,
        )
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=255),
            comment=None,
            existing_comment="The name of the product.",
            existing_nullable=False,
        )

    with op.batch_alter_table("genders", schema=None) as batch_op:
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=50),
            comment=None,
            existing_comment="The target gender for the product, e.g., male, female, unisex.",
            existing_nullable=False,
        )

    with op.batch_alter_table("countries", schema=None) as batch_op:
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=100),
            comment=None,
            existing_comment="The country of origin for the product, e.g., USA, China.",
            existing_nullable=False,
        )

    with op.batch_alter_table("categories", schema=None) as batch_op:
        batch_op.alter_column(
            "description",
            existing_type=mysql.VARCHAR(length=255),
            comment=None,
            existing_comment="A brief description of the category.",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=100),
            comment=None,
            existing_comment="The name of the product category, e.g., shoes, shirts, etc.",
            existing_nullable=False,
        )

    with op.batch_alter_table("brands", schema=None) as batch_op:
        batch_op.alter_column(
            "description",
            existing_type=mysql.VARCHAR(length=255),
            comment=None,
            existing_comment="A brief description of the brand.",
            existing_nullable=True,
        )
        batch_op.alter_column(
            "name",
            existing_type=mysql.VARCHAR(length=100),
            comment=None,
            existing_comment="The name of the brand, e.g., Nike, Adidas, etc.",
            existing_nullable=False,
        )

    op.drop_table("users")
    op.drop_table("roles")
    # ### end Alembic commands ###
